from PIL import Image

def encrypt_image(image_path, key):
    try:
        img = Image.open(image_path)
        img = img.convert("RGBA")  # force to 4-channel
        pixels = img.load()

        for i in range(img.size[0]):
            for j in range(img.size[1]):
                r, g, b, a = pixels[i, j]
                pixels[i, j] = (
                    (r + key) % 256,
                    (g + key) % 256,
                    (b + key) % 256,
                    a  # keep alpha unchanged
                )

        img.save("encrypted_image.png")
        print("‚úÖ Image encrypted and saved as 'encrypted_image.png'")
    except Exception as e:
        print(f"‚ùå Error during encryption: {e}")

def decrypt_image(image_path, key):
    try:
        img = Image.open(image_path)
        img = img.convert("RGBA")  # force to 4-channel
        pixels = img.load()

        for i in range(img.size[0]):
            for j in range(img.size[1]):
                r, g, b, a = pixels[i, j]
                pixels[i, j] = (
                    (r - key) % 256,
                    (g - key) % 256,
                    (b - key) % 256,
                    a  # keep alpha unchanged
                )

        img.save("decrypted_image.png")
        print("üîì Image decrypted and saved as 'decrypted_image.png'")
    except Exception as e:
        print(f"‚ùå Error during decryption: {e}")


# --- Entry Point (Main Program) ---
if __name__ == "__main__":
    try:
        mode = input("Choose mode (encrypt/decrypt): ").lower().strip()
        key = int(input("Enter a numeric key (e.g., 10): "))
        image_path = input("Enter image filename (e.g., sample_image.png): ").strip()

        if mode == "encrypt":
            encrypt_image(image_path, key)
        elif mode == "decrypt":
            decrypt_image(image_path, key)
        else:
            print("‚ùå Invalid mode selected. Please type 'encrypt' or 'decrypt'.")
    except ValueError:
        print("‚ùå Please enter a valid number for the key.")


